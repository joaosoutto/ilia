{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/src/components/Container/MainContainer.tsx"],"sourcesContent":["import React from \"react\";\nimport { Container } from \"@mui/material\";\nimport { useIsMobile } from \"../../../hooks/useDimensions\";\n\nconst MainContainer = ({\n  children,\n  style,\n}: {\n  children: React.ReactNode;\n  style?: React.CSSProperties;\n}) => {\n  const isMobile = useIsMobile();\n  return (\n    <Container\n      style={{\n        flex: 1,\n        width: \"100%\",\n        minWidth: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        gap: \"24px\",\n        maxHeight: \"100%\",\n        height: \"100%\",\n        padding: isMobile ? 0 : \"16px\",\n        border: \"1px solid red\",\n        ...style,\n      }}\n    >\n      {children}\n    </Container>\n  );\n};\n\nexport default MainContainer;\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAEA,MAAM,gBAAgB,CAAC,EACrB,QAAQ,EACR,KAAK,EAIN;IACC,MAAM,WAAW,CAAA,GAAA,+GAAA,CAAA,cAAW,AAAD;IAC3B,qBACE,qKAAC,mMAAA,CAAA,YAAS;QACR,OAAO;YACL,MAAM;YACN,OAAO;YACP,UAAU;YACV,SAAS;YACT,eAAe;YACf,gBAAgB;YAChB,YAAY;YACZ,KAAK;YACL,WAAW;YACX,QAAQ;YACR,SAAS,WAAW,IAAI;YACxB,QAAQ;YACR,GAAG,KAAK;QACV;kBAEC;;;;;;AAGP;uCAEe","debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/contants/api.ts"],"sourcesContent":["export const BASE_API_URL = \"https://swapi.dev/api\";\n"],"names":[],"mappings":";;;AAAO,MAAM,eAAe","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/services/planets.ts"],"sourcesContent":["import axios from \"axios\";\nimport { BASE_API_URL } from \"../contants/api\";\nimport { PlanetsListParams } from \"./types\";\n\nclass PlanetsApi {\n  static getPlanets(params?: PlanetsListParams) {\n    return axios.get(`${BASE_API_URL}/planets`, { params });\n  }\n\n  static getPlanetDetails(id: string) {\n    return axios.get(`${BASE_API_URL}/planets/${id}`);\n  }\n}\n\nexport default PlanetsApi;\n"],"names":[],"mappings":";;;AAAA;AACA;;;;;;;AAGA,MAAM;IACJ,OAAO,WAAW,MAA0B,EAAE;QAC5C,OAAO,0GAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,wGAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,EAAE;YAAE;QAAO;IACvD;IAEA,OAAO,iBAAiB,EAAU,EAAE;QAClC,OAAO,0GAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,wGAAA,CAAA,eAAY,CAAC,SAAS,EAAE,IAAI;IAClD;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/query/constants.ts"],"sourcesContent":["export const QUERY_KEYS = {\n  planets: \"planets\",\n};"],"names":[],"mappings":";;;AAAO,MAAM,aAAa;IACxB,SAAS;AACX","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/query/planets/usePlanets.ts"],"sourcesContent":["import { useState } from \"react\";\n\nimport { useQuery } from \"@tanstack/react-query\";\nimport { PlanetsListParams, PlanetsListResponse } from \"../../services/types\";\nimport PlanetsApi from \"../../services/planets\";\nimport { QUERY_KEYS } from \"../constants\";\nimport { AxiosResponse } from \"axios\";\nimport { Planet } from \"../../types/planets\";\n\nconst usePlanets = (params?: PlanetsListParams) => {\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const fetchPage = (number: number) => {\n    setCurrentPage(number);\n  };\n\n  const query = useQuery<\n    AxiosResponse<PlanetsListResponse>,\n    unknown,\n    AxiosResponse<PlanetsListResponse>\n  >({\n    queryKey: [QUERY_KEYS.planets, params, currentPage],\n    queryFn: async () =>\n      PlanetsApi.getPlanets({\n        ...(params || {}),\n        page: currentPage,\n      }),\n  });\n  return {\n    planetsResponse: query.data?.data,\n    fetchPage,\n    currentPage,\n    ...query,\n  };\n};\n\nexport default usePlanets;\n"],"names":[],"mappings":";;;AAAA;AAEA;AAEA;AACA;;;;;;;;;;AAIA,MAAM,aAAa,CAAC;IAClB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,MAAM,YAAY,CAAC;QACjB,eAAe;IACjB;IAEA,MAAM,QAAQ,CAAA,GAAA,wJAAA,CAAA,WAAQ,AAAD,EAInB;QACA,UAAU;YAAC,2GAAA,CAAA,aAAU,CAAC,OAAO;YAAE;YAAQ;SAAY;QACnD,SAAS,UACP,4GAAA,CAAA,UAAU,CAAC,UAAU,CAAC;gBACpB,GAAI,UAAU,CAAC,CAAC;gBAChB,MAAM;YACR;IACJ;IACA,OAAO;QACL,iBAAiB,MAAM,IAAI,EAAE;QAC7B;QACA;QACA,GAAG,KAAK;IACV;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/hooks/useDebounce.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport function useDebounce<T>(value: T, delay: number = 500): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,SAAS,YAAe,KAAQ,EAAE,QAAgB,GAAG;IAC1D,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAK;IAExD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,UAAU,WAAW;YACzB,kBAAkB;QACpB,GAAG;QAEH,OAAO;YACL,aAAa;QACf;IACF,GAAG;QAAC;QAAO;KAAM;IAEjB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/src/components/searchInput/index.tsx"],"sourcesContent":["import { CircularProgress, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SearchOutlinedIcon from \"@mui/icons-material/SearchOutlined\";\n\nimport { SearchInputProps } from \"./types\";\nimport { palette } from \"../../../theme/palette\";\nimport { theme } from \"../../../theme/theme\";\n\nconst SearchInput = ({\n  placeholder = \"Search...\",\n  onChange,\n  value,\n  isLoading,\n}: SearchInputProps) => {\n  const getEndAdornment = () => {\n    if (isLoading) {\n      return <CircularProgress size={20} />;\n    }\n    return (\n      value && (\n        <IconButton size=\"small\" onClick={() => onChange?.(\"\")}>\n          <CloseIcon sx={{ color: palette.primary[600] }} />\n        </IconButton>\n      )\n    );\n  };\n\n  return (\n    <TextField\n      variant=\"outlined\"\n      placeholder={placeholder}\n      size=\"small\"\n      fullWidth\n      disabled={isLoading}\n      InputProps={{\n        startAdornment: (\n          <SearchOutlinedIcon\n            sx={{\n              color: palette.primary.main,\n              marginRight: theme.spacing(1),\n            }}\n          />\n        ),\n        endAdornment: getEndAdornment(),\n      }}\n      onChange={(e) => onChange?.(e.target.value)}\n      value={value}\n    />\n  );\n};\n\nexport default SearchInput;\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;;;;;;;AAEA,MAAM,cAAc,CAAC,EACnB,cAAc,WAAW,EACzB,QAAQ,EACR,KAAK,EACL,SAAS,EACQ;IACjB,MAAM,kBAAkB;QACtB,IAAI,WAAW;YACb,qBAAO,qKAAC,wNAAA,CAAA,mBAAgB;gBAAC,MAAM;;;;;;QACjC;QACA,OACE,uBACE,qKAAC,sMAAA,CAAA,aAAU;YAAC,MAAK;YAAQ,SAAS,IAAM,WAAW;sBACjD,cAAA,qKAAC,mJAAA,CAAA,UAAS;gBAAC,IAAI;oBAAE,OAAO,yGAAA,CAAA,UAAO,CAAC,OAAO,CAAC,IAAI;gBAAC;;;;;;;;;;;IAIrD;IAEA,qBACE,qKAAC,mMAAA,CAAA,YAAS;QACR,SAAQ;QACR,aAAa;QACb,MAAK;QACL,SAAS;QACT,UAAU;QACV,YAAY;YACV,8BACE,qKAAC,4JAAA,CAAA,UAAkB;gBACjB,IAAI;oBACF,OAAO,yGAAA,CAAA,UAAO,CAAC,OAAO,CAAC,IAAI;oBAC3B,aAAa,uGAAA,CAAA,QAAK,CAAC,OAAO,CAAC;gBAC7B;;;;;;YAGJ,cAAc;QAChB;QACA,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;QAC1C,OAAO;;;;;;AAGb;uCAEe","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/contants/planets.ts"],"sourcesContent":["export enum PlanetClimate {\n  ARID = \"arid\",\n  TEMPERATE = \"tempaerate\",\n  FROZEN = \"frozen\",\n  MURKY = \"murky\",\n  HOT = \"hot\",\n  TROPICAL = \"tropical\",\n  POLLUTED = \"polluted\",\n  UNKNOWN = \"unknown\",\n  SUPERHEATED = \"superheated\",\n}\n"],"names":[],"mappings":";;;AAAO,IAAA,AAAK,uCAAA;;;;;;;;;;WAAA","debugId":null}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/src/utils/planets.ts"],"sourcesContent":["import { PlanetClimate } from \"../../contants/planets\";\n\nexport function getClimateColor(climate: string): string {\n  switch (climate) {\n    case PlanetClimate.ARID:\n      return \"#EDC988\";\n    case PlanetClimate.TEMPERATE:\n      return \"#88B04B\";\n    case \"frozen\":\n      return \"#B3E0FF\";\n    case PlanetClimate.MURKY:\n      return \"#6B705C\";\n    case PlanetClimate.HOT:\n      return \"#FF5733\";\n    case PlanetClimate.TROPICAL:\n      return \"#29B6F6\";\n    case PlanetClimate.POLLUTED:\n      return \"#757575\";\n    case PlanetClimate.UNKNOWN:\n      return \"#BDBDBD\";\n    case PlanetClimate.SUPERHEATED:\n      return \"#FF1744\";\n    case PlanetClimate.FROZEN:\n      return \"#90CAF9\";\n    default:\n      return \"#88B04B\";\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,SAAS,gBAAgB,OAAe;IAC7C,OAAQ;QACN,KAAK,4GAAA,CAAA,gBAAa,CAAC,IAAI;YACrB,OAAO;QACT,KAAK,4GAAA,CAAA,gBAAa,CAAC,SAAS;YAC1B,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK,4GAAA,CAAA,gBAAa,CAAC,KAAK;YACtB,OAAO;QACT,KAAK,4GAAA,CAAA,gBAAa,CAAC,GAAG;YACpB,OAAO;QACT,KAAK,4GAAA,CAAA,gBAAa,CAAC,QAAQ;YACzB,OAAO;QACT,KAAK,4GAAA,CAAA,gBAAa,CAAC,QAAQ;YACzB,OAAO;QACT,KAAK,4GAAA,CAAA,gBAAa,CAAC,OAAO;YACxB,OAAO;QACT,KAAK,4GAAA,CAAA,gBAAa,CAAC,WAAW;YAC5B,OAAO;QACT,KAAK,4GAAA,CAAA,gBAAa,CAAC,MAAM;YACvB,OAAO;QACT;YACE,OAAO;IACX;AACF","debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/src/components/DataGrid/index.tsx"],"sourcesContent":["import { Grid, Card, Box, Typography, Chip, Stack, Avatar } from \"@mui/material\";\nimport { Planet } from \"../../../types/planets\";\nimport { DataGridProps } from \"./types\";\nimport PublicOutlinedIcon from \"@mui/icons-material/PublicOutlined\";\nimport TerrainIcon from \"@mui/icons-material/Terrain\";\nimport StraightenIcon from \"@mui/icons-material/Straighten\";\nimport WbSunnyIcon from \"@mui/icons-material/WbSunny\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport SatelliteIcon from \"@mui/icons-material/Satellite\";\nimport { getClimateColor } from \"@/utils/planets\";\n\nexport const DataGrid = ({ results }: DataGridProps) => {\n  return (\n    <Box\n      style={{\n        width: \"100%\",\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(5, 1fr)\",\n        gap: \"20px\",\n        padding: \"20px\",\n      }}\n    >\n      {results?.map((result) => {\n        const primaryClimate = result.climate.split(\",\")[0].trim();\n        const climateColor = getClimateColor(primaryClimate);\n\n        return (\n          <Card\n            key={result.name}\n            sx={{\n              background: `\n                radial-gradient(circle at 20% 20%, ${climateColor}15 0%, transparent 50%),\n                radial-gradient(circle at 80% 80%, ${climateColor}10 0%, transparent 50%),\n                linear-gradient(135deg, #000000 0%, #301841 50%, #000000 100%)\n              `,\n              border: `2px solid ${climateColor}`,\n              borderRadius: \"20px\",\n              padding: \"24px\",\n              position: \"relative\",\n              overflow: \"hidden\",\n              transition: \"all 0.4s ease\",\n              minHeight: \"320px\",\n              \"&:hover\": {\n                transform: \"translateY(-12px) scale(1.02)\",\n                boxShadow: `\n                  0 25px 50px ${climateColor}30,\n                  0 0 30px ${climateColor}20,\n                  inset 0 0 20px ${climateColor}10\n                `,\n                borderColor: climateColor,\n                \"& .planet-glow\": {\n                  opacity: 1,\n                  transform: \"scale(1.1)\",\n                },\n                \"& .star-field\": {\n                  opacity: 0.8,\n                },\n              },\n              \"&::before\": {\n                content: '\"\"',\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                right: 0,\n                height: \"6px\",\n                background: `linear-gradient(90deg, transparent, ${climateColor}, transparent)`,\n                borderRadius: \"20px 20px 0 0\",\n              },\n              \"&::after\": {\n                content: '\"\"',\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                width: \"200px\",\n                height: \"200px\",\n                background: `radial-gradient(circle, ${climateColor}05 0%, transparent 70%)`,\n                borderRadius: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                zIndex: 0,\n              },\n            }}\n          >\n            {/* Star Field Background */}\n            <Box\n              className=\"star-field\"\n              sx={{\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                opacity: 0.3,\n                background: `\n                  radial-gradient(2px 2px at 20px 30px, #FFFFFF, transparent),\n                  radial-gradient(2px 2px at 40px 70px, #FFFFFF, transparent),\n                  radial-gradient(1px 1px at 90px 40px, #FFFFFF, transparent),\n                  radial-gradient(1px 1px at 130px 80px, #FFFFFF, transparent),\n                  radial-gradient(2px 2px at 160px 30px, #FFFFFF, transparent)\n                `,\n                backgroundRepeat: \"repeat\",\n                backgroundSize: \"200px 100px\",\n                zIndex: 1,\n              }}\n            />\n\n            {/* Planet Avatar */}\n            <Box\n              sx={{\n                position: \"absolute\",\n                top: \"20px\",\n                right: \"20px\",\n                zIndex: 2,\n              }}\n            >\n              <Avatar\n                className=\"planet-glow\"\n                sx={{\n                  width: \"60px\",\n                  height: \"60px\",\n                  background: `linear-gradient(45deg, ${climateColor}40, ${climateColor}20)`,\n                  border: `3px solid ${climateColor}`,\n                  boxShadow: `\n                    0 0 20px ${climateColor}50,\n                    inset 0 0 20px ${climateColor}20\n                  `,\n                  opacity: 0.8,\n                  transition: \"all 0.4s ease\",\n                  \"&::before\": {\n                    content: '\"\"',\n                    position: \"absolute\",\n                    top: \"-2px\",\n                    left: \"-2px\",\n                    right: \"-2px\",\n                    bottom: \"-2px\",\n                    background: `conic-gradient(from 0deg, ${climateColor}, transparent, ${climateColor})`,\n                    borderRadius: \"50%\",\n                    zIndex: -1,\n                    animation: \"rotate 3s linear infinite\",\n                  },\n                }}\n              >\n                <PublicOutlinedIcon\n                  sx={{\n                    color: climateColor,\n                    fontSize: \"32px\",\n                    filter: `drop-shadow(0 0 8px ${climateColor})`,\n                  }}\n                />\n              </Avatar>\n            </Box>\n\n            {/* Planet Name */}\n            <Box sx={{ position: \"relative\", zIndex: 2, marginBottom: \"20px\" }}>\n              <Typography\n                variant=\"h5\"\n                sx={{\n                  color: \"#FFFFFF\",\n                  fontWeight: \"bold\",\n                  fontSize: \"1.5rem\",\n                  textShadow: `\n                    0 0 10px ${climateColor},\n                    0 0 20px ${climateColor}50,\n                    0 0 30px ${climateColor}30\n                  `,\n                  maxWidth: \"calc(100% - 80px)\",\n                  position: \"relative\",\n                  \"&::before\": {\n                    content: '\"\"',\n                    position: \"absolute\",\n                    left: \"-10px\",\n                    top: \"50%\",\n                    transform: \"translateY(-50%)\",\n                    width: \"4px\",\n                    height: \"60%\",\n                    background: `linear-gradient(to bottom, ${climateColor}, transparent)`,\n                    borderRadius: \"2px\",\n                  },\n                }}\n              >\n                🌌 {result.name}\n              </Typography>\n              <Typography\n                variant=\"caption\"\n                sx={{\n                  color: `${climateColor}80`,\n                  fontSize: \"0.7rem\",\n                  fontWeight: 500,\n                  textTransform: \"uppercase\",\n                  letterSpacing: \"1px\",\n                  display: \"block\",\n                  marginTop: \"4px\",\n                }}\n              >\n                PLANET CLASSIFICATION\n              </Typography>\n            </Box>\n\n            {/* Planet Details */}\n            <Box sx={{ position: \"relative\", zIndex: 2 }}>\n              <Stack spacing={2.5}>\n                {/* Terrain */}\n                <Box \n                  sx={{ \n                    display: \"flex\", \n                    alignItems: \"center\", \n                    gap: 1.5,\n                    padding: \"8px 12px\",\n                    background: `linear-gradient(90deg, ${climateColor}10, transparent)`,\n                    borderRadius: \"8px\",\n                    border: `1px solid ${climateColor}20`,\n                  }}\n                >\n                  <TerrainIcon sx={{ color: climateColor, fontSize: \"22px\", filter: `drop-shadow(0 0 4px ${climateColor})` }} />\n                  <Box>\n                    <Typography\n                      variant=\"caption\"\n                      sx={{\n                        color: `${climateColor}60`,\n                        fontSize: \"0.7rem\",\n                        fontWeight: 600,\n                        textTransform: \"uppercase\",\n                        letterSpacing: \"0.5px\",\n                        display: \"block\",\n                      }}\n                    >\n                      SURFACE TERRAIN\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      sx={{\n                        color: \"#FFFFFF\",\n                        fontSize: \"0.9rem\",\n                        fontWeight: 500,\n                      }}\n                    >\n                      {result.terrain || \"Unknown\"}\n                    </Typography>\n                  </Box>\n                </Box>\n\n                {/* Diameter */}\n                <Box \n                  sx={{ \n                    display: \"flex\", \n                    alignItems: \"center\", \n                    gap: 1.5,\n                    padding: \"8px 12px\",\n                    background: `linear-gradient(90deg, ${climateColor}10, transparent)`,\n                    borderRadius: \"8px\",\n                    border: `1px solid ${climateColor}20`,\n                  }}\n                >\n                  <SatelliteIcon sx={{ color: climateColor, fontSize: \"22px\", filter: `drop-shadow(0 0 4px ${climateColor})` }} />\n                  <Box>\n                    <Typography\n                      variant=\"caption\"\n                      sx={{\n                        color: `${climateColor}60`,\n                        fontSize: \"0.7rem\",\n                        fontWeight: 600,\n                        textTransform: \"uppercase\",\n                        letterSpacing: \"0.5px\",\n                        display: \"block\",\n                      }}\n                    >\n                      PLANETARY DIAMETER\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      sx={{\n                        color: \"#FFFFFF\",\n                        fontSize: \"0.9rem\",\n                        fontWeight: 500,\n                      }}\n                    >\n                      {result.diameter === \"unknown\"\n                        ? \"Unknown\"\n                        : `${Number(result.diameter).toLocaleString()} km`}\n                    </Typography>\n                  </Box>\n                </Box>\n\n                {/* Climate */}\n                <Box \n                  sx={{ \n                    display: \"flex\", \n                    alignItems: \"center\", \n                    gap: 1.5,\n                    padding: \"8px 12px\",\n                    background: `linear-gradient(90deg, ${climateColor}10, transparent)`,\n                    borderRadius: \"8px\",\n                    border: `1px solid ${climateColor}20`,\n                  }}\n                >\n                  <WbSunnyIcon sx={{ color: climateColor, fontSize: \"22px\", filter: `drop-shadow(0 0 4px ${climateColor})` }} />\n                  <Box>\n                    <Typography\n                      variant=\"caption\"\n                      sx={{\n                        color: `${climateColor}60`,\n                        fontSize: \"0.7rem\",\n                        fontWeight: 600,\n                        textTransform: \"uppercase\",\n                        letterSpacing: \"0.5px\",\n                        display: \"block\",\n                      }}\n                    >\n                      ATMOSPHERIC CLIMATE\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      sx={{\n                        color: \"#FFFFFF\",\n                        fontSize: \"0.9rem\",\n                        fontWeight: 500,\n                      }}\n                    >\n                      {result.climate}\n                    </Typography>\n                  </Box>\n                </Box>\n\n                {/* Climate Classification Badge */}\n                <Box sx={{ marginTop: \"16px\", textAlign: \"center\" }}>\n                  <Chip\n                    icon={<StarIcon sx={{ color: climateColor }} />}\n                    label={`${primaryClimate.charAt(0).toUpperCase() + primaryClimate.slice(1)} CLASS`}\n                    sx={{\n                      backgroundColor: `${climateColor}15`,\n                      color: climateColor,\n                      border: `2px solid ${climateColor}`,\n                      fontWeight: \"bold\",\n                      fontSize: \"0.8rem\",\n                      padding: \"8px 16px\",\n                      height: \"36px\",\n                      boxShadow: `0 0 15px ${climateColor}30`,\n                      \"&:hover\": {\n                        backgroundColor: `${climateColor}25`,\n                        boxShadow: `0 0 20px ${climateColor}40`,\n                      },\n                      \"& .MuiChip-icon\": {\n                        fontSize: \"18px\",\n                      },\n                    }}\n                  />\n                </Box>\n              </Stack>\n            </Box>\n\n            {/* Galactic Border Effect */}\n            <Box\n              sx={{\n                position: \"absolute\",\n                bottom: 0,\n                left: 0,\n                right: 0,\n                height: \"2px\",\n                background: `linear-gradient(90deg, transparent, ${climateColor}, transparent)`,\n                opacity: 0.6,\n              }}\n            />\n          </Card>\n        );\n      })}\n    </Box>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;AAEO,MAAM,WAAW,CAAC,EAAE,OAAO,EAAiB;IACjD,qBACE,qKAAC,iLAAA,CAAA,MAAG;QACF,OAAO;YACL,OAAO;YACP,SAAS;YACT,qBAAqB;YACrB,KAAK;YACL,SAAS;QACX;kBAEC,SAAS,IAAI,CAAC;YACb,MAAM,iBAAiB,OAAO,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI;YACxD,MAAM,eAAe,CAAA,GAAA,gHAAA,CAAA,kBAAe,AAAD,EAAE;YAErC,qBACE,qKAAC,oLAAA,CAAA,OAAI;gBAEH,IAAI;oBACF,YAAY,CAAC;mDACwB,EAAE,aAAa;mDACf,EAAE,aAAa;;cAEpD,CAAC;oBACD,QAAQ,CAAC,UAAU,EAAE,cAAc;oBACnC,cAAc;oBACd,SAAS;oBACT,UAAU;oBACV,UAAU;oBACV,YAAY;oBACZ,WAAW;oBACX,WAAW;wBACT,WAAW;wBACX,WAAW,CAAC;8BACE,EAAE,aAAa;2BAClB,EAAE,aAAa;iCACT,EAAE,aAAa;gBAChC,CAAC;wBACD,aAAa;wBACb,kBAAkB;4BAChB,SAAS;4BACT,WAAW;wBACb;wBACA,iBAAiB;4BACf,SAAS;wBACX;oBACF;oBACA,aAAa;wBACX,SAAS;wBACT,UAAU;wBACV,KAAK;wBACL,MAAM;wBACN,OAAO;wBACP,QAAQ;wBACR,YAAY,CAAC,oCAAoC,EAAE,aAAa,cAAc,CAAC;wBAC/E,cAAc;oBAChB;oBACA,YAAY;wBACV,SAAS;wBACT,UAAU;wBACV,KAAK;wBACL,MAAM;wBACN,OAAO;wBACP,QAAQ;wBACR,YAAY,CAAC,wBAAwB,EAAE,aAAa,uBAAuB,CAAC;wBAC5E,cAAc;wBACd,WAAW;wBACX,QAAQ;oBACV;gBACF;;kCAGA,qKAAC,iLAAA,CAAA,MAAG;wBACF,WAAU;wBACV,IAAI;4BACF,UAAU;4BACV,KAAK;4BACL,MAAM;4BACN,OAAO;4BACP,QAAQ;4BACR,SAAS;4BACT,YAAY,CAAC;;;;;;gBAMb,CAAC;4BACD,kBAAkB;4BAClB,gBAAgB;4BAChB,QAAQ;wBACV;;;;;;kCAIF,qKAAC,iLAAA,CAAA,MAAG;wBACF,IAAI;4BACF,UAAU;4BACV,KAAK;4BACL,OAAO;4BACP,QAAQ;wBACV;kCAEA,cAAA,qKAAC,0LAAA,CAAA,SAAM;4BACL,WAAU;4BACV,IAAI;gCACF,OAAO;gCACP,QAAQ;gCACR,YAAY,CAAC,uBAAuB,EAAE,aAAa,IAAI,EAAE,aAAa,GAAG,CAAC;gCAC1E,QAAQ,CAAC,UAAU,EAAE,cAAc;gCACnC,WAAW,CAAC;6BACD,EAAE,aAAa;mCACT,EAAE,aAAa;kBAChC,CAAC;gCACD,SAAS;gCACT,YAAY;gCACZ,aAAa;oCACX,SAAS;oCACT,UAAU;oCACV,KAAK;oCACL,MAAM;oCACN,OAAO;oCACP,QAAQ;oCACR,YAAY,CAAC,0BAA0B,EAAE,aAAa,eAAe,EAAE,aAAa,CAAC,CAAC;oCACtF,cAAc;oCACd,QAAQ,CAAC;oCACT,WAAW;gCACb;4BACF;sCAEA,cAAA,qKAAC,4JAAA,CAAA,UAAkB;gCACjB,IAAI;oCACF,OAAO;oCACP,UAAU;oCACV,QAAQ,CAAC,oBAAoB,EAAE,aAAa,CAAC,CAAC;gCAChD;;;;;;;;;;;;;;;;kCAMN,qKAAC,iLAAA,CAAA,MAAG;wBAAC,IAAI;4BAAE,UAAU;4BAAY,QAAQ;4BAAG,cAAc;wBAAO;;0CAC/D,qKAAC,sMAAA,CAAA,aAAU;gCACT,SAAQ;gCACR,IAAI;oCACF,OAAO;oCACP,YAAY;oCACZ,UAAU;oCACV,YAAY,CAAC;6BACF,EAAE,aAAa;6BACf,EAAE,aAAa;6BACf,EAAE,aAAa;kBAC1B,CAAC;oCACD,UAAU;oCACV,UAAU;oCACV,aAAa;wCACX,SAAS;wCACT,UAAU;wCACV,MAAM;wCACN,KAAK;wCACL,WAAW;wCACX,OAAO;wCACP,QAAQ;wCACR,YAAY,CAAC,2BAA2B,EAAE,aAAa,cAAc,CAAC;wCACtE,cAAc;oCAChB;gCACF;;oCACD;oCACK,OAAO,IAAI;;;;;;;0CAEjB,qKAAC,sMAAA,CAAA,aAAU;gCACT,SAAQ;gCACR,IAAI;oCACF,OAAO,GAAG,aAAa,EAAE,CAAC;oCAC1B,UAAU;oCACV,YAAY;oCACZ,eAAe;oCACf,eAAe;oCACf,SAAS;oCACT,WAAW;gCACb;0CACD;;;;;;;;;;;;kCAMH,qKAAC,iLAAA,CAAA,MAAG;wBAAC,IAAI;4BAAE,UAAU;4BAAY,QAAQ;wBAAE;kCACzC,cAAA,qKAAC,uLAAA,CAAA,QAAK;4BAAC,SAAS;;8CAEd,qKAAC,iLAAA,CAAA,MAAG;oCACF,IAAI;wCACF,SAAS;wCACT,YAAY;wCACZ,KAAK;wCACL,SAAS;wCACT,YAAY,CAAC,uBAAuB,EAAE,aAAa,gBAAgB,CAAC;wCACpE,cAAc;wCACd,QAAQ,CAAC,UAAU,EAAE,aAAa,EAAE,CAAC;oCACvC;;sDAEA,qKAAC,qJAAA,CAAA,UAAW;4CAAC,IAAI;gDAAE,OAAO;gDAAc,UAAU;gDAAQ,QAAQ,CAAC,oBAAoB,EAAE,aAAa,CAAC,CAAC;4CAAC;;;;;;sDACzG,qKAAC,iLAAA,CAAA,MAAG;;8DACF,qKAAC,sMAAA,CAAA,aAAU;oDACT,SAAQ;oDACR,IAAI;wDACF,OAAO,GAAG,aAAa,EAAE,CAAC;wDAC1B,UAAU;wDACV,YAAY;wDACZ,eAAe;wDACf,eAAe;wDACf,SAAS;oDACX;8DACD;;;;;;8DAGD,qKAAC,sMAAA,CAAA,aAAU;oDACT,SAAQ;oDACR,IAAI;wDACF,OAAO;wDACP,UAAU;wDACV,YAAY;oDACd;8DAEC,OAAO,OAAO,IAAI;;;;;;;;;;;;;;;;;;8CAMzB,qKAAC,iLAAA,CAAA,MAAG;oCACF,IAAI;wCACF,SAAS;wCACT,YAAY;wCACZ,KAAK;wCACL,SAAS;wCACT,YAAY,CAAC,uBAAuB,EAAE,aAAa,gBAAgB,CAAC;wCACpE,cAAc;wCACd,QAAQ,CAAC,UAAU,EAAE,aAAa,EAAE,CAAC;oCACvC;;sDAEA,qKAAC,uJAAA,CAAA,UAAa;4CAAC,IAAI;gDAAE,OAAO;gDAAc,UAAU;gDAAQ,QAAQ,CAAC,oBAAoB,EAAE,aAAa,CAAC,CAAC;4CAAC;;;;;;sDAC3G,qKAAC,iLAAA,CAAA,MAAG;;8DACF,qKAAC,sMAAA,CAAA,aAAU;oDACT,SAAQ;oDACR,IAAI;wDACF,OAAO,GAAG,aAAa,EAAE,CAAC;wDAC1B,UAAU;wDACV,YAAY;wDACZ,eAAe;wDACf,eAAe;wDACf,SAAS;oDACX;8DACD;;;;;;8DAGD,qKAAC,sMAAA,CAAA,aAAU;oDACT,SAAQ;oDACR,IAAI;wDACF,OAAO;wDACP,UAAU;wDACV,YAAY;oDACd;8DAEC,OAAO,QAAQ,KAAK,YACjB,YACA,GAAG,OAAO,OAAO,QAAQ,EAAE,cAAc,GAAG,GAAG,CAAC;;;;;;;;;;;;;;;;;;8CAM1D,qKAAC,iLAAA,CAAA,MAAG;oCACF,IAAI;wCACF,SAAS;wCACT,YAAY;wCACZ,KAAK;wCACL,SAAS;wCACT,YAAY,CAAC,uBAAuB,EAAE,aAAa,gBAAgB,CAAC;wCACpE,cAAc;wCACd,QAAQ,CAAC,UAAU,EAAE,aAAa,EAAE,CAAC;oCACvC;;sDAEA,qKAAC,qJAAA,CAAA,UAAW;4CAAC,IAAI;gDAAE,OAAO;gDAAc,UAAU;gDAAQ,QAAQ,CAAC,oBAAoB,EAAE,aAAa,CAAC,CAAC;4CAAC;;;;;;sDACzG,qKAAC,iLAAA,CAAA,MAAG;;8DACF,qKAAC,sMAAA,CAAA,aAAU;oDACT,SAAQ;oDACR,IAAI;wDACF,OAAO,GAAG,aAAa,EAAE,CAAC;wDAC1B,UAAU;wDACV,YAAY;wDACZ,eAAe;wDACf,eAAe;wDACf,SAAS;oDACX;8DACD;;;;;;8DAGD,qKAAC,sMAAA,CAAA,aAAU;oDACT,SAAQ;oDACR,IAAI;wDACF,OAAO;wDACP,UAAU;wDACV,YAAY;oDACd;8DAEC,OAAO,OAAO;;;;;;;;;;;;;;;;;;8CAMrB,qKAAC,iLAAA,CAAA,MAAG;oCAAC,IAAI;wCAAE,WAAW;wCAAQ,WAAW;oCAAS;8CAChD,cAAA,qKAAC,oLAAA,CAAA,OAAI;wCACH,oBAAM,qKAAC,kJAAA,CAAA,UAAQ;4CAAC,IAAI;gDAAE,OAAO;4CAAa;;;;;;wCAC1C,OAAO,GAAG,eAAe,MAAM,CAAC,GAAG,WAAW,KAAK,eAAe,KAAK,CAAC,GAAG,MAAM,CAAC;wCAClF,IAAI;4CACF,iBAAiB,GAAG,aAAa,EAAE,CAAC;4CACpC,OAAO;4CACP,QAAQ,CAAC,UAAU,EAAE,cAAc;4CACnC,YAAY;4CACZ,UAAU;4CACV,SAAS;4CACT,QAAQ;4CACR,WAAW,CAAC,SAAS,EAAE,aAAa,EAAE,CAAC;4CACvC,WAAW;gDACT,iBAAiB,GAAG,aAAa,EAAE,CAAC;gDACpC,WAAW,CAAC,SAAS,EAAE,aAAa,EAAE,CAAC;4CACzC;4CACA,mBAAmB;gDACjB,UAAU;4CACZ;wCACF;;;;;;;;;;;;;;;;;;;;;;kCAOR,qKAAC,iLAAA,CAAA,MAAG;wBACF,IAAI;4BACF,UAAU;4BACV,QAAQ;4BACR,MAAM;4BACN,OAAO;4BACP,QAAQ;4BACR,YAAY,CAAC,oCAAoC,EAAE,aAAa,cAAc,CAAC;4BAC/E,SAAS;wBACX;;;;;;;eA3UG,OAAO,IAAI;;;;;QA+UtB;;;;;;AAGN","debugId":null}},
    {"offset": {"line": 828, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/src/components/Home/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport MainContainer from \"../Container/MainContainer\";\nimport usePlanets from \"../../../query/planets/usePlanets\";\nimport { Button } from \"@mui/material\";\nimport { useDebounce } from \"../../../hooks/useDebounce\";\nimport SearchInput from \"../searchInput\";\nimport { DataGrid } from \"../DataGrid\";\n\nconst Home = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const debouncedSearchTerm = useDebounce(searchTerm, 1000);\n\n  const { planetsResponse, isLoading, fetchPage, currentPage } = usePlanets({\n    search: debouncedSearchTerm,\n  });\n\n  console.log(planetsResponse);\n  // console.log(isLoading, isFetching, isPending);\n  return (\n    <MainContainer>\n      <SearchInput\n        placeholder=\"Search planets...\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e)}\n        isLoading={isLoading}\n      />\n      <DataGrid results={planetsResponse?.results} />\n\n      <Button onClick={() => fetchPage(currentPage + 1)}>Next</Button>\n      <Button onClick={() => fetchPage(currentPage - 1)}>Previous</Button>\n    </MainContainer>\n  );\n};\n\nexport default Home;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAEA,MAAM,OAAO;IACX,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,sBAAsB,CAAA,GAAA,6GAAA,CAAA,cAAW,AAAD,EAAE,YAAY;IAEpD,MAAM,EAAE,eAAe,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,UAAU,AAAD,EAAE;QACxE,QAAQ;IACV;IAEA,QAAQ,GAAG,CAAC;IACZ,iDAAiD;IACjD,qBACE,qKAAC,yIAAA,CAAA,UAAa;;0BACZ,qKAAC,mIAAA,CAAA,UAAW;gBACV,aAAY;gBACZ,OAAO;gBACP,UAAU,CAAC,IAAM,cAAc;gBAC/B,WAAW;;;;;;0BAEb,qKAAC,gIAAA,CAAA,WAAQ;gBAAC,SAAS,iBAAiB;;;;;;0BAEpC,qKAAC,0LAAA,CAAA,SAAM;gBAAC,SAAS,IAAM,UAAU,cAAc;0BAAI;;;;;;0BACnD,qKAAC,0LAAA,CAAA,SAAM;gBAAC,SAAS,IAAM,UAAU,cAAc;0BAAI;;;;;;;;;;;;AAGzD;uCAEe","debugId":null}},
    {"offset": {"line": 909, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/src/pages/index.tsx"],"sourcesContent":["import React from \"react\";\nimport Home from \"../components/Home\";\n\nconst HomePage = () => {\n  return <Home />;\n};\n\nexport default HomePage;\n"],"names":[],"mappings":";;;;AACA;;;;;;;AAEA,MAAM,WAAW;IACf,qBAAO,qKAAC,4HAAA,CAAA,UAAI;;;;;AACd;uCAEe","debugId":null}}]
}