{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/src/components/Container/styles.ts"],"sourcesContent":["import { styled, Stack, Container } from \"@mui/material\";\nimport { theme } from \"../../../theme/theme\";\n\nexport const NoContentWrapper = styled(Stack)(() => ({\n  width: \"100%\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  gap: 0,\n}));\n\nexport const MainContainerWrapper = styled(Container)(\n  ({ isMobile }: { isMobile: boolean }) => ({\n    flex: 1,\n    width: \"100%\",\n    minWidth: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    gap: theme.spacing(2),\n    maxHeight: \"100%\",\n    height: \"100%\",\n    border: \"1px solid red\",\n  })\n);\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AACA;;;AAEO,MAAM,mBAAmB,CAAA,GAAA,0MAAA,CAAA,SAAM,AAAD,EAAE,uLAAA,CAAA,QAAK,EAAE,IAAM,CAAC;QACnD,OAAO;QACP,YAAY;QACZ,gBAAgB;QAChB,KAAK;IACP,CAAC;AAEM,MAAM,uBAAuB,CAAA,GAAA,0MAAA,CAAA,SAAM,AAAD,EAAE,mMAAA,CAAA,YAAS,EAClD,CAAC,EAAE,QAAQ,EAAyB,GAAK,CAAC;QACxC,MAAM;QACN,OAAO;QACP,UAAU;QACV,SAAS;QACT,eAAe;QACf,gBAAgB;QAChB,YAAY;QACZ,KAAK,uGAAA,CAAA,QAAK,CAAC,OAAO,CAAC;QACnB,WAAW;QACX,QAAQ;QACR,QAAQ;IACV,CAAC","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/src/components/Container/MainContainer.tsx"],"sourcesContent":["import React from \"react\";\nimport { CommonContainerProps } from \"./types\";\nimport { useIsMobile } from \"../../../hooks/useDimensions\";\nimport { MainContainerWrapper } from \"./styles\";\n\nconst MainContainer = ({ children }: CommonContainerProps) => {\n  const isMobile = useIsMobile();\n  return (\n    <MainContainerWrapper isMobile={isMobile}>{children}</MainContainerWrapper>\n  );\n};\n\nexport default MainContainer;\n"],"names":[],"mappings":";;;;AAEA;AACA;;;;AAEA,MAAM,gBAAgB,CAAC,EAAE,QAAQ,EAAwB;IACvD,MAAM,WAAW,CAAA,GAAA,+GAAA,CAAA,cAAW,AAAD;IAC3B,qBACE,qKAAC,iIAAA,CAAA,uBAAoB;QAAC,UAAU;kBAAW;;;;;;AAE/C;uCAEe","debugId":null}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/contants/api.ts"],"sourcesContent":["export const BASE_API_URL = \"https://swapi.dev/api\";\n"],"names":[],"mappings":";;;AAAO,MAAM,eAAe","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/services/planets.ts"],"sourcesContent":["import axios from \"axios\";\nimport { BASE_API_URL } from \"../contants/api\";\nimport { PlanetsListParams } from \"./types\";\n\nclass PlanetsApi {\n  static getPlanets(params?: PlanetsListParams) {\n    return axios.get(`${BASE_API_URL}/planets`, { params });\n  }\n\n  static getPlanetDetails(id: string) {\n    return axios.get(`${BASE_API_URL}/planets/${id}`);\n  }\n}\n\nexport default PlanetsApi;\n"],"names":[],"mappings":";;;AAAA;AACA;;;;;;;AAGA,MAAM;IACJ,OAAO,WAAW,MAA0B,EAAE;QAC5C,OAAO,0GAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,wGAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,EAAE;YAAE;QAAO;IACvD;IAEA,OAAO,iBAAiB,EAAU,EAAE;QAClC,OAAO,0GAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,wGAAA,CAAA,eAAY,CAAC,SAAS,EAAE,IAAI;IAClD;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/query/constants.ts"],"sourcesContent":["export const QUERY_KEYS = {\n  planets: \"planets\",\n};"],"names":[],"mappings":";;;AAAO,MAAM,aAAa;IACxB,SAAS;AACX","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/query/planets/usePlanets.ts"],"sourcesContent":["import { useState } from \"react\";\n\nimport { useQuery } from \"@tanstack/react-query\";\nimport { PlanetsListParams, PlanetsListResponse } from \"../../services/types\";\nimport PlanetsApi from \"../../services/planets\";\nimport { QUERY_KEYS } from \"../constants\";\nimport { AxiosResponse } from \"axios\";\nimport { Planet } from \"../../types/planets\";\n\nconst usePlanets = (params?: PlanetsListParams) => {\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const fetchPage = (number: number) => {\n    setCurrentPage(number);\n  };\n\n  const query = useQuery<\n    AxiosResponse<PlanetsListResponse>,\n    unknown,\n    AxiosResponse<PlanetsListResponse>\n  >({\n    queryKey: [QUERY_KEYS.planets, params, currentPage],\n    queryFn: async () =>\n      PlanetsApi.getPlanets({\n        ...(params || {}),\n        page: currentPage,\n      }),\n  });\n  return {\n    planetsResponse: query.data?.data,\n    fetchPage,\n    currentPage,\n    ...query,\n  };\n};\n\nexport default usePlanets;\n"],"names":[],"mappings":";;;AAAA;AAEA;AAEA;AACA;;;;;;;;;;AAIA,MAAM,aAAa,CAAC;IAClB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,MAAM,YAAY,CAAC;QACjB,eAAe;IACjB;IAEA,MAAM,QAAQ,CAAA,GAAA,wJAAA,CAAA,WAAQ,AAAD,EAInB;QACA,UAAU;YAAC,2GAAA,CAAA,aAAU,CAAC,OAAO;YAAE;YAAQ;SAAY;QACnD,SAAS,UACP,4GAAA,CAAA,UAAU,CAAC,UAAU,CAAC;gBACpB,GAAI,UAAU,CAAC,CAAC;gBAChB,MAAM;YACR;IACJ;IACA,OAAO;QACL,iBAAiB,MAAM,IAAI,EAAE;QAC7B;QACA;QACA,GAAG,KAAK;IACV;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/hooks/useDebounce.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport function useDebounce<T>(value: T, delay: number = 500): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,SAAS,YAAe,KAAQ,EAAE,QAAgB,GAAG;IAC1D,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAK;IAExD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,UAAU,WAAW;YACzB,kBAAkB;QACpB,GAAG;QAEH,OAAO;YACL,aAAa;QACf;IACF,GAAG;QAAC;QAAO;KAAM;IAEjB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/src/components/searchInput/index.tsx"],"sourcesContent":["import { CircularProgress, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SearchOutlinedIcon from \"@mui/icons-material/SearchOutlined\";\n\nimport { SearchInputProps } from \"./types\";\nimport { palette } from \"../../../theme/palette\";\nimport { theme } from \"../../../theme/theme\";\n\nconst SearchInput = ({\n  placeholder = \"Search...\",\n  onChange,\n  value,\n  isLoading,\n}: SearchInputProps) => {\n  const getEndAdornment = () => {\n    if (isLoading) {\n      return <CircularProgress size={20} />;\n    }\n    return (\n      value && (\n        <IconButton size=\"small\" onClick={() => onChange?.(\"\")}>\n          <CloseIcon sx={{ color: palette.primary[600] }} />\n        </IconButton>\n      )\n    );\n  };\n\n  return (\n    <TextField\n      variant=\"outlined\"\n      placeholder={placeholder}\n      size=\"small\"\n      fullWidth\n      disabled={isLoading}\n      InputProps={{\n        startAdornment: (\n          <SearchOutlinedIcon\n            sx={{\n              color: palette.primary.main,\n              marginRight: theme.spacing(1),\n            }}\n          />\n        ),\n        endAdornment: getEndAdornment(),\n      }}\n      onChange={(e) => onChange?.(e.target.value)}\n      value={value}\n    />\n  );\n};\n\nexport default SearchInput;\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;;;;;;;AAEA,MAAM,cAAc,CAAC,EACnB,cAAc,WAAW,EACzB,QAAQ,EACR,KAAK,EACL,SAAS,EACQ;IACjB,MAAM,kBAAkB;QACtB,IAAI,WAAW;YACb,qBAAO,qKAAC,wNAAA,CAAA,mBAAgB;gBAAC,MAAM;;;;;;QACjC;QACA,OACE,uBACE,qKAAC,sMAAA,CAAA,aAAU;YAAC,MAAK;YAAQ,SAAS,IAAM,WAAW;sBACjD,cAAA,qKAAC,mJAAA,CAAA,UAAS;gBAAC,IAAI;oBAAE,OAAO,yGAAA,CAAA,UAAO,CAAC,OAAO,CAAC,IAAI;gBAAC;;;;;;;;;;;IAIrD;IAEA,qBACE,qKAAC,mMAAA,CAAA,YAAS;QACR,SAAQ;QACR,aAAa;QACb,MAAK;QACL,SAAS;QACT,UAAU;QACV,YAAY;YACV,8BACE,qKAAC,4JAAA,CAAA,UAAkB;gBACjB,IAAI;oBACF,OAAO,yGAAA,CAAA,UAAO,CAAC,OAAO,CAAC,IAAI;oBAC3B,aAAa,uGAAA,CAAA,QAAK,CAAC,OAAO,CAAC;gBAC7B;;;;;;YAGJ,cAAc;QAChB;QACA,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;QAC1C,OAAO;;;;;;AAGb;uCAEe","debugId":null}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/contants/planets.ts"],"sourcesContent":["export enum PlanetClimate {\n  ARID = \"arid\",\n  TEMPERATE = \"tempaerate\",\n  FROZEN = \"frozen\",\n  MURKY = \"murky\",\n  HOT = \"hot\",\n  TROPICAL = \"tropical\",\n  POLLUTED = \"polluted\",\n  UNKNOWN = \"unknown\",\n  SUPERHEATED = \"superheated\",\n}\n"],"names":[],"mappings":";;;AAAO,IAAA,AAAK,uCAAA;;;;;;;;;;WAAA","debugId":null}},
    {"offset": {"line": 288, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/src/utils/planets.ts"],"sourcesContent":["import { PlanetClimate } from \"../../contants/planets\";\n\nexport function getClimateColor(climate: string): string {\n  switch (climate) {\n    case PlanetClimate.ARID:\n      return \"#EDC988\";\n    case PlanetClimate.TEMPERATE:\n      return \"#88B04B\";\n    case \"frozen\":\n      return \"#0066CC\";\n    case PlanetClimate.MURKY:\n      return \"#8B4513\";\n    case PlanetClimate.HOT:\n      return \"#FF5733\";\n    case PlanetClimate.TROPICAL:\n      return \"#29B6F6\";\n    case PlanetClimate.POLLUTED:\n      return \"#FF6B35\";\n    case PlanetClimate.UNKNOWN:\n      return \"#BDBDBD\";\n    case PlanetClimate.SUPERHEATED:\n      return \"#FF1744\";\n    case PlanetClimate.FROZEN:\n      return \"#0066CC\";\n    default:\n      return \"#88B04B\";\n  }\n}\n\nexport const getClimateBackground = (color: string) => {\n  return `\n            radial-gradient(circle at 30% 20%, ${color}08 0%, transparent 60%),\n            radial-gradient(circle at 70% 80%, ${color}05 0%, transparent 60%),\n            linear-gradient(135deg, #f8f9fa 0%, #e9ecef 50%, #f1f3f4 100%)\n          `;\n};\n"],"names":[],"mappings":";;;;AAAA;;AAEO,SAAS,gBAAgB,OAAe;IAC7C,OAAQ;QACN,KAAK,4GAAA,CAAA,gBAAa,CAAC,IAAI;YACrB,OAAO;QACT,KAAK,4GAAA,CAAA,gBAAa,CAAC,SAAS;YAC1B,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK,4GAAA,CAAA,gBAAa,CAAC,KAAK;YACtB,OAAO;QACT,KAAK,4GAAA,CAAA,gBAAa,CAAC,GAAG;YACpB,OAAO;QACT,KAAK,4GAAA,CAAA,gBAAa,CAAC,QAAQ;YACzB,OAAO;QACT,KAAK,4GAAA,CAAA,gBAAa,CAAC,QAAQ;YACzB,OAAO;QACT,KAAK,4GAAA,CAAA,gBAAa,CAAC,OAAO;YACxB,OAAO;QACT,KAAK,4GAAA,CAAA,gBAAa,CAAC,WAAW;YAC5B,OAAO;QACT,KAAK,4GAAA,CAAA,gBAAa,CAAC,MAAM;YACvB,OAAO;QACT;YACE,OAAO;IACX;AACF;AAEO,MAAM,uBAAuB,CAAC;IACnC,OAAO,CAAC;+CACqC,EAAE,MAAM;+CACR,EAAE,MAAM;;UAE7C,CAAC;AACX","debugId":null}},
    {"offset": {"line": 331, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/src/components/planetCard/styles.ts"],"sourcesContent":["import { Box, Card, styled, Typography } from \"@mui/material\";\nimport { getClimateColor } from \"@/utils/planets\";\nimport { theme } from \"../../../theme/theme\";\n\nexport const PlanetCardWrapper = styled(Card)(\n  ({ climateColor }: { climateColor: string }) => ({\n    // background: getClimateBackground(climateColor),\n    border: `1px solid ${climateColor}30`,\n    borderRadius: theme.spacing(2),\n    position: \"relative\",\n    transition: \"all 0.4s ease\",\n    minHeight: \"300px\",\n    \"&:hover\": {\n      cursor: \"pointer\",\n      boxShadow: `\n              0 10px 20px ${climateColor}20,\n              0 4px 8px rgba(0,0,0,0.1),\n              inset 0 1px 0 rgba(255,255,255,0.2)\n            `,\n      borderColor: climateColor,\n    },\n    \"&::before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      height: \"2px\",\n      background: `linear-gradient(90deg, transparent, ${climateColor}, transparent)`,\n    },\n  })\n);\n\nexport const PlanetCardContainer = styled(Box)(\n  ({ climateColor }: { climateColor: string }) => ({\n    position: \"absolute\",\n    top: theme.spacing(2),\n    right: theme.spacing(1),\n    zIndex: 2,\n    borderRadius: \"50%\",\n    padding: theme.spacing(0.5),\n    border: `2px solid ${climateColor}40`,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  })\n);\n\nexport const PlanetCardName = styled(Typography)(\n  ({ climateColor }: { climateColor: string }) => ({\n    background: `linear-gradient(135deg, ${climateColor}16, transparent)`,\n    padding: `${theme.spacing(0.5)} ${theme.spacing(1)}`,\n    borderLeft: `4px solid ${climateColor}`,\n  })\n);\n\nexport const IconWrapper = styled(Box)(\n  ({ climateColor }: { climateColor: string }) => ({\n    background: `linear-gradient(135deg, ${climateColor}12, ${climateColor}05)`,\n    borderRadius: theme.spacing(1),\n    padding: \"10px\",\n    border: `1px solid ${climateColor}30`,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  })\n);\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAEA;;;AAEO,MAAM,oBAAoB,CAAA,GAAA,0MAAA,CAAA,SAAM,AAAD,EAAE,oLAAA,CAAA,OAAI,EAC1C,CAAC,EAAE,YAAY,EAA4B,GAAK,CAAC;QAC/C,kDAAkD;QAClD,QAAQ,CAAC,UAAU,EAAE,aAAa,EAAE,CAAC;QACrC,cAAc,uGAAA,CAAA,QAAK,CAAC,OAAO,CAAC;QAC5B,UAAU;QACV,YAAY;QACZ,WAAW;QACX,WAAW;YACT,QAAQ;YACR,WAAW,CAAC;0BACQ,EAAE,aAAa;;;YAG7B,CAAC;YACP,aAAa;QACf;QACA,aAAa;YACX,SAAS;YACT,UAAU;YACV,KAAK;YACL,MAAM;YACN,OAAO;YACP,QAAQ;YACR,YAAY,CAAC,oCAAoC,EAAE,aAAa,cAAc,CAAC;QACjF;IACF,CAAC;AAGI,MAAM,sBAAsB,CAAA,GAAA,0MAAA,CAAA,SAAM,AAAD,EAAE,iLAAA,CAAA,MAAG,EAC3C,CAAC,EAAE,YAAY,EAA4B,GAAK,CAAC;QAC/C,UAAU;QACV,KAAK,uGAAA,CAAA,QAAK,CAAC,OAAO,CAAC;QACnB,OAAO,uGAAA,CAAA,QAAK,CAAC,OAAO,CAAC;QACrB,QAAQ;QACR,cAAc;QACd,SAAS,uGAAA,CAAA,QAAK,CAAC,OAAO,CAAC;QACvB,QAAQ,CAAC,UAAU,EAAE,aAAa,EAAE,CAAC;QACrC,SAAS;QACT,YAAY;QACZ,gBAAgB;IAClB,CAAC;AAGI,MAAM,iBAAiB,CAAA,GAAA,0MAAA,CAAA,SAAM,AAAD,EAAE,sMAAA,CAAA,aAAU,EAC7C,CAAC,EAAE,YAAY,EAA4B,GAAK,CAAC;QAC/C,YAAY,CAAC,wBAAwB,EAAE,aAAa,gBAAgB,CAAC;QACrE,SAAS,GAAG,uGAAA,CAAA,QAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,uGAAA,CAAA,QAAK,CAAC,OAAO,CAAC,IAAI;QACpD,YAAY,CAAC,UAAU,EAAE,cAAc;IACzC,CAAC;AAGI,MAAM,cAAc,CAAA,GAAA,0MAAA,CAAA,SAAM,AAAD,EAAE,iLAAA,CAAA,MAAG,EACnC,CAAC,EAAE,YAAY,EAA4B,GAAK,CAAC;QAC/C,YAAY,CAAC,wBAAwB,EAAE,aAAa,IAAI,EAAE,aAAa,GAAG,CAAC;QAC3E,cAAc,uGAAA,CAAA,QAAK,CAAC,OAAO,CAAC;QAC5B,SAAS;QACT,QAAQ,CAAC,UAAU,EAAE,aAAa,EAAE,CAAC;QACrC,SAAS;QACT,YAAY;QACZ,gBAAgB;IAClB,CAAC","debugId":null}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/src/components/planetCard/index.tsx"],"sourcesContent":["import { Box, Card, CardContent, Stack, Typography } from \"@mui/material\";\nimport { Planet } from \"../../../types/planets\";\nimport { getClimateBackground, getClimateColor } from \"@/utils/planets\";\nimport PublicOutlinedIcon from \"@mui/icons-material/PublicOutlined\";\nimport TerrainIcon from \"@mui/icons-material/Terrain\";\nimport StraightenIcon from \"@mui/icons-material/Straighten\";\nimport WbSunnyIcon from \"@mui/icons-material/WbSunny\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport SatelliteIcon from \"@mui/icons-material/Satellite\";\nimport {\n  IconWrapper,\n  PlanetCardContainer,\n  PlanetCardName,\n  PlanetCardWrapper,\n} from \"./styles\";\nimport { theme } from \"../../../theme/theme\";\nimport { palette } from \"../../../theme/palette\";\n\nexport const PlanetCard = ({ result }: { result: Planet }) => {\n  const primaryClimate = result.climate.split(\",\")[0].trim();\n  const climateColor = getClimateColor(primaryClimate);\n\n  return (\n    <PlanetCardWrapper\n      key={result.name}\n      climateColor={climateColor}\n      sx={{\n        // padding: \"24px\",\n        background: getClimateBackground(climateColor),\n      }}\n    >\n      <CardContent>\n        <PlanetCardContainer climateColor={climateColor}>\n          <PublicOutlinedIcon\n            sx={{\n              color: climateColor,\n              fontSize: \"28px\",\n            }}\n          />\n        </PlanetCardContainer>\n        <Box sx={{ marginBottom: \"16px\", position: \"relative\", zIndex: 2 }}>\n          <PlanetCardName variant=\"h6\" climateColor={climateColor}>\n            {result.name}\n          </PlanetCardName>\n        </Box>\n\n        <Box sx={{ position: \"relative\", zIndex: 2 }}>\n          <Stack spacing={2}>\n            {/* Terrain */}\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: 1,\n              }}\n            >\n              <IconWrapper climateColor={climateColor}>\n                <TerrainIcon\n                  sx={{\n                    color: climateColor,\n                    fontSize: \"18px\",\n                  }}\n                />\n              </IconWrapper>\n              <Typography\n                variant=\"subtitle2\"\n                style={{\n                  color: climateColor,\n                  fontWeight: \"bold\",\n                }}\n              >\n                Terrain:\n                <Typography\n                  component=\"span\"\n                  variant=\"subtitle2\"\n                  sx={{\n                    color: palette.branded.black,\n                  }}\n                >\n                  {\" \"}\n                  {result.terrain || \"Unknown\"}\n                </Typography>{\" \"}\n              </Typography>\n            </Box>\n\n            {/* Diameter */}\n            <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1.5 }}>\n              <IconWrapper climateColor={climateColor}>\n                <SatelliteIcon\n                  sx={{\n                    color: climateColor,\n                    fontSize: \"18px\",\n                  }}\n                />\n              </IconWrapper>\n              <Typography\n                variant=\"body2\"\n                sx={{\n                  color: \"#2a2a2a\",\n                  fontSize: \"0.95rem\",\n                  fontWeight: 500,\n                  letterSpacing: \"0.3px\",\n                }}\n              >\n                <span style={{ color: climateColor, fontWeight: \"bold\" }}>\n                  Diameter:\n                </span>{\" \"}\n                {result.diameter === \"unknown\"\n                  ? \"Unknown\"\n                  : `${Number(result.diameter).toLocaleString()} km`}\n              </Typography>\n            </Box>\n\n            {/* Climate */}\n            <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1.5 }}>\n              <IconWrapper climateColor={climateColor}>\n                <WbSunnyIcon\n                  sx={{\n                    color: climateColor,\n                    fontSize: \"18px\",\n                  }}\n                />\n              </IconWrapper>\n              <Typography\n                variant=\"body2\"\n                sx={{\n                  color: \"#2a2a2a\",\n                  fontSize: \"0.95rem\",\n                  fontWeight: 500,\n                  letterSpacing: \"0.3px\",\n                }}\n              >\n                <span style={{ color: climateColor, fontWeight: \"bold\" }}>\n                  Climate:\n                </span>{\" \"}\n                {result.climate}\n              </Typography>\n            </Box>\n          </Stack>\n        </Box>\n      </CardContent>\n    </PlanetCardWrapper>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAOA;;;;;;;;;;AAEO,MAAM,aAAa,CAAC,EAAE,MAAM,EAAsB;IACvD,MAAM,iBAAiB,OAAO,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI;IACxD,MAAM,eAAe,CAAA,GAAA,gHAAA,CAAA,kBAAe,AAAD,EAAE;IAErC,qBACE,qKAAC,kIAAA,CAAA,oBAAiB;QAEhB,cAAc;QACd,IAAI;YACF,mBAAmB;YACnB,YAAY,CAAA,GAAA,gHAAA,CAAA,uBAAoB,AAAD,EAAE;QACnC;kBAEA,cAAA,qKAAC,yMAAA,CAAA,cAAW;;8BACV,qKAAC,kIAAA,CAAA,sBAAmB;oBAAC,cAAc;8BACjC,cAAA,qKAAC,4JAAA,CAAA,UAAkB;wBACjB,IAAI;4BACF,OAAO;4BACP,UAAU;wBACZ;;;;;;;;;;;8BAGJ,qKAAC,iLAAA,CAAA,MAAG;oBAAC,IAAI;wBAAE,cAAc;wBAAQ,UAAU;wBAAY,QAAQ;oBAAE;8BAC/D,cAAA,qKAAC,kIAAA,CAAA,iBAAc;wBAAC,SAAQ;wBAAK,cAAc;kCACxC,OAAO,IAAI;;;;;;;;;;;8BAIhB,qKAAC,iLAAA,CAAA,MAAG;oBAAC,IAAI;wBAAE,UAAU;wBAAY,QAAQ;oBAAE;8BACzC,cAAA,qKAAC,uLAAA,CAAA,QAAK;wBAAC,SAAS;;0CAEd,qKAAC,iLAAA,CAAA,MAAG;gCACF,IAAI;oCACF,SAAS;oCACT,YAAY;oCACZ,KAAK;gCACP;;kDAEA,qKAAC,kIAAA,CAAA,cAAW;wCAAC,cAAc;kDACzB,cAAA,qKAAC,qJAAA,CAAA,UAAW;4CACV,IAAI;gDACF,OAAO;gDACP,UAAU;4CACZ;;;;;;;;;;;kDAGJ,qKAAC,sMAAA,CAAA,aAAU;wCACT,SAAQ;wCACR,OAAO;4CACL,OAAO;4CACP,YAAY;wCACd;;4CACD;0DAEC,qKAAC,sMAAA,CAAA,aAAU;gDACT,WAAU;gDACV,SAAQ;gDACR,IAAI;oDACF,OAAO,yGAAA,CAAA,UAAO,CAAC,OAAO,CAAC,KAAK;gDAC9B;;oDAEC;oDACA,OAAO,OAAO,IAAI;;;;;;;4CACP;;;;;;;;;;;;;0CAKlB,qKAAC,iLAAA,CAAA,MAAG;gCAAC,IAAI;oCAAE,SAAS;oCAAQ,YAAY;oCAAU,KAAK;gCAAI;;kDACzD,qKAAC,kIAAA,CAAA,cAAW;wCAAC,cAAc;kDACzB,cAAA,qKAAC,uJAAA,CAAA,UAAa;4CACZ,IAAI;gDACF,OAAO;gDACP,UAAU;4CACZ;;;;;;;;;;;kDAGJ,qKAAC,sMAAA,CAAA,aAAU;wCACT,SAAQ;wCACR,IAAI;4CACF,OAAO;4CACP,UAAU;4CACV,YAAY;4CACZ,eAAe;wCACjB;;0DAEA,qKAAC;gDAAK,OAAO;oDAAE,OAAO;oDAAc,YAAY;gDAAO;0DAAG;;;;;;4CAElD;4CACP,OAAO,QAAQ,KAAK,YACjB,YACA,GAAG,OAAO,OAAO,QAAQ,EAAE,cAAc,GAAG,GAAG,CAAC;;;;;;;;;;;;;0CAKxD,qKAAC,iLAAA,CAAA,MAAG;gCAAC,IAAI;oCAAE,SAAS;oCAAQ,YAAY;oCAAU,KAAK;gCAAI;;kDACzD,qKAAC,kIAAA,CAAA,cAAW;wCAAC,cAAc;kDACzB,cAAA,qKAAC,qJAAA,CAAA,UAAW;4CACV,IAAI;gDACF,OAAO;gDACP,UAAU;4CACZ;;;;;;;;;;;kDAGJ,qKAAC,sMAAA,CAAA,aAAU;wCACT,SAAQ;wCACR,IAAI;4CACF,OAAO;4CACP,UAAU;4CACV,YAAY;4CACZ,eAAe;wCACjB;;0DAEA,qKAAC;gDAAK,OAAO;oDAAE,OAAO;oDAAc,YAAY;gDAAO;0DAAG;;;;;;4CAElD;4CACP,OAAO,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA/GpB,OAAO,IAAI;;;;;AAuHtB","debugId":null}},
    {"offset": {"line": 683, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/src/components/dataGrid/index.tsx"],"sourcesContent":["import {\n  Grid,\n  Card,\n  Box,\n  Typography,\n  Chip,\n  Stack,\n  Avatar,\n} from \"@mui/material\";\nimport { Planet } from \"../../../types/planets\";\nimport { DataGridProps } from \"./types\";\nimport PublicOutlinedIcon from \"@mui/icons-material/PublicOutlined\";\nimport TerrainIcon from \"@mui/icons-material/Terrain\";\nimport StraightenIcon from \"@mui/icons-material/Straighten\";\nimport WbSunnyIcon from \"@mui/icons-material/WbSunny\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport SatelliteIcon from \"@mui/icons-material/Satellite\";\nimport { getClimateColor } from \"@/utils/planets\";\nimport { palette } from \"../../../theme/palette\";\nimport { PlanetCard } from \"../planetCard\";\n\nexport const DataGrid = ({ results }: DataGridProps) => {\n  return (\n    <Box\n      style={{\n        width: \"100%\",\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(5, 1fr)\",\n\n        gap: \"20px\",\n        // padding: \"20px\",\n        // borderRadius: \"16px\",\n        border: `1px solid ${palette.primary.main}`,\n        // padding: \"20px\",\n        // background: palette.background.default,\n      }}\n    >\n      {results?.map((result) => {\n        const primaryClimate = result.climate.split(\",\")[0].trim();\n        const climateColor = getClimateColor(primaryClimate);\n\n        // Elegant galactic background with subtle climate accents\n        const getClimateBackground = (climate: string, color: string) => {\n          return `\n            radial-gradient(circle at 30% 20%, ${color}08 0%, transparent 60%),\n            radial-gradient(circle at 70% 80%, ${color}05 0%, transparent 60%),\n            linear-gradient(135deg, #f8f9fa 0%, #e9ecef 50%, #f1f3f4 100%)\n          `;\n        };\n\n        return (\n          <PlanetCard key={result.name} result={result} />\n          // <Card\n          //   key={result.name}\n          //   sx={{\n          //     background: getClimateBackground(primaryClimate, climateColor),\n          //     border: `1px solid ${climateColor}30`,\n          //     borderRadius: \"16px\",\n          //     padding: \"24px\",\n          //     position: \"relative\",\n          //     transition: \"all 0.4s cubic-bezier(0.4, 0, 0.2, 1)\",\n          //     minHeight: \"300px\",\n          //     backdropFilter: \"blur(10px)\",\n          //     \"&:hover\": {\n          //       transform: \"translateY(-8px) scale(1.02)\",\n          //       boxShadow: `\n          //         0 20px 40px ${climateColor}20,\n          //         0 8px 16px rgba(0,0,0,0.1),\n          //         inset 0 1px 0 rgba(255,255,255,0.2)\n          //       `,\n          //       borderColor: climateColor,\n          //       \"&::after\": {\n          //         opacity: 1,\n          //       },\n          //     },\n          //     \"&::before\": {\n          //       content: '\"\"',\n          //       position: \"absolute\",\n          //       top: 0,\n          //       left: 0,\n          //       right: 0,\n          //       height: \"2px\",\n          //       background: `linear-gradient(90deg, transparent, ${climateColor}, transparent)`,\n          //       borderRadius: \"16px 16px 0 0\",\n          //     },\n          //     \"&::after\": {\n          //       content: '\"\"',\n          //       position: \"absolute\",\n          //       top: 0,\n          //       left: 0,\n          //       right: 0,\n          //       bottom: 0,\n          //       background: `radial-gradient(circle at 50% 0%, ${climateColor}05 0%, transparent 50%)`,\n          //       borderRadius: \"16px\",\n          //       opacity: 0,\n          //       transition: \"opacity 0.4s ease\",\n          //       pointerEvents: \"none\",\n          //     },\n          //   }}\n          // >\n          //   {/* Elegant Galaxy Background */}\n          //   <Box\n          //     sx={{\n          //       position: \"absolute\",\n          //       top: 0,\n          //       left: 0,\n          //       right: 0,\n          //       bottom: 0,\n          //       opacity: 0.15,\n          //       background: `\n          //         radial-gradient(1px 1px at 25px 25px, #FFFFFF, transparent),\n          //         radial-gradient(1px 1px at 50px 75px, #FFFFFF, transparent),\n          //         radial-gradient(0.5px 0.5px at 100px 50px, #FFFFFF, transparent),\n          //         radial-gradient(1px 1px at 150px 25px, #FFFFFF, transparent),\n          //         radial-gradient(0.5px 0.5px at 200px 75px, #FFFFFF, transparent),\n          //         radial-gradient(1px 1px at 250px 50px, #FFFFFF, transparent)\n          //       `,\n          //       backgroundRepeat: \"repeat\",\n          //       backgroundSize: \"300px 100px\",\n          //       zIndex: 1,\n          //       animation: \"twinkle 4s ease-in-out infinite alternate\",\n          //     }}\n          //   />\n\n          //   {/* Elegant Planet Icon */}\n          //   <Box\n          //     sx={{\n          //       position: \"absolute\",\n          //       top: \"20px\",\n          //       right: \"20px\",\n          //       zIndex: 2,\n          //       background: `linear-gradient(135deg, ${climateColor}15, ${climateColor}05)`,\n          //       borderRadius: \"50%\",\n          //       padding: \"12px\",\n          //       border: `2px solid ${climateColor}40`,\n          //       backdropFilter: \"blur(5px)\",\n          //       transition: \"all 0.3s ease\",\n          //       boxShadow: `0 0 20px ${climateColor}30`,\n          //       \"&:hover\": {\n          //         transform: \"scale(1.1)\",\n          //         background: `linear-gradient(135deg, ${climateColor}25, ${climateColor}15)`,\n          //         boxShadow: `0 0 30px ${climateColor}50`,\n          //       },\n          //     }}\n          //   >\n          //     <PublicOutlinedIcon\n          //       sx={{\n          //         color: climateColor,\n          //         fontSize: \"24px\",\n          //         filter: `drop-shadow(0 0 8px ${climateColor}60) drop-shadow(0 0 16px ${climateColor}40)`,\n          //       }}\n          //     />\n          //   </Box>\n\n          //   {/* Planet Name */}\n          //   <Box sx={{ marginBottom: \"16px\", position: \"relative\", zIndex: 2 }}>\n          //     <Typography\n          //       variant=\"h5\"\n          //       sx={{\n          //         color: \"#1a1a1a\",\n          //         fontWeight: \"600\",\n          //         fontSize: \"1.4rem\",\n          //         maxWidth: \"calc(100% - 100px)\",\n          //         letterSpacing: \"0.5px\",\n          //         background: `linear-gradient(135deg, ${climateColor}08, transparent)`,\n          //         borderRadius: \"0 12px 12px 0\",\n          //         padding: \"12px 20px\",\n          //         borderLeft: `4px solid ${climateColor}`,\n          //         position: \"relative\",\n          //         \"&::before\": {\n          //           content: '\"\"',\n          //           position: \"absolute\",\n          //           left: \"-2px\",\n          //           top: \"50%\",\n          //           transform: \"translateY(-50%)\",\n          //           width: \"6px\",\n          //           height: \"60%\",\n          //           background: `linear-gradient(to bottom, ${climateColor}, transparent)`,\n          //           borderRadius: \"3px\",\n          //         },\n          //       }}\n          //     >\n          //       {result.name}\n          //     </Typography>\n          //   </Box>\n\n          //   {/* Planet Details */}\n          //   <Box sx={{ position: \"relative\", zIndex: 2 }}>\n          //     <Stack spacing={2}>\n          //       {/* Terrain */}\n          //       <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1.5 }}>\n          //         <Box\n          //           sx={{\n          //             background: `linear-gradient(135deg, ${climateColor}12, ${climateColor}05)`,\n          //             borderRadius: \"10px\",\n          //             padding: \"10px\",\n          //             border: `1px solid ${climateColor}30`,\n          //             backdropFilter: \"blur(5px)\",\n          //             transition: \"all 0.3s ease\",\n          //             \"&:hover\": {\n          //               transform: \"scale(1.05)\",\n          //               background: `linear-gradient(135deg, ${climateColor}20, ${climateColor}10)`,\n          //             },\n          //           }}\n          //         >\n          //           <TerrainIcon\n          //             sx={{\n          //               color: climateColor,\n          //               fontSize: \"18px\",\n          //             }}\n          //           />\n          //         </Box>\n          //         <Typography\n          //           variant=\"body2\"\n          //           sx={{\n          //             color: \"#2a2a2a\",\n          //             fontSize: \"0.95rem\",\n          //             fontWeight: 500,\n          //             letterSpacing: \"0.3px\",\n          //           }}\n          //         >\n          //           <span style={{ color: climateColor, fontWeight: \"bold\" }}>\n          //             Terrain:\n          //           </span>{\" \"}\n          //           {result.terrain || \"Unknown\"}\n          //         </Typography>\n          //       </Box>\n\n          //       {/* Diameter */}\n          //       <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1.5 }}>\n          //         <Box\n          //           sx={{\n          //             background: `linear-gradient(135deg, ${climateColor}12, ${climateColor}05)`,\n          //             borderRadius: \"10px\",\n          //             padding: \"10px\",\n          //             border: `1px solid ${climateColor}30`,\n          //             backdropFilter: \"blur(5px)\",\n          //             transition: \"all 0.3s ease\",\n          //             \"&:hover\": {\n          //               transform: \"scale(1.05)\",\n          //               background: `linear-gradient(135deg, ${climateColor}20, ${climateColor}10)`,\n          //             },\n          //           }}\n          //         >\n          //           <SatelliteIcon\n          //             sx={{\n          //               color: climateColor,\n          //               fontSize: \"18px\",\n          //             }}\n          //           />\n          //         </Box>\n          //         <Typography\n          //           variant=\"body2\"\n          //           sx={{\n          //             color: \"#2a2a2a\",\n          //             fontSize: \"0.95rem\",\n          //             fontWeight: 500,\n          //             letterSpacing: \"0.3px\",\n          //           }}\n          //         >\n          //           <span style={{ color: climateColor, fontWeight: \"bold\" }}>\n          //             Diameter:\n          //           </span>{\" \"}\n          //           {result.diameter === \"unknown\"\n          //             ? \"Unknown\"\n          //             : `${Number(result.diameter).toLocaleString()} km`}\n          //         </Typography>\n          //       </Box>\n\n          //       {/* Climate */}\n          //       <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1.5 }}>\n          //         <Box\n          //           sx={{\n          //             background: `linear-gradient(135deg, ${climateColor}12, ${climateColor}05)`,\n          //             borderRadius: \"10px\",\n          //             padding: \"10px\",\n          //             border: `1px solid ${climateColor}30`,\n          //             backdropFilter: \"blur(5px)\",\n          //             transition: \"all 0.3s ease\",\n          //             \"&:hover\": {\n          //               transform: \"scale(1.05)\",\n          //               background: `linear-gradient(135deg, ${climateColor}20, ${climateColor}10)`,\n          //             },\n          //           }}\n          //         >\n          //           <WbSunnyIcon\n          //             sx={{\n          //               color: climateColor,\n          //               fontSize: \"18px\",\n          //             }}\n          //           />\n          //         </Box>\n          //         <Typography\n          //           variant=\"body2\"\n          //           sx={{\n          //             color: \"#2a2a2a\",\n          //             fontSize: \"0.95rem\",\n          //             fontWeight: 500,\n          //             letterSpacing: \"0.3px\",\n          //           }}\n          //         >\n          //           <span style={{ color: climateColor, fontWeight: \"bold\" }}>\n          //             Climate:\n          //           </span>{\" \"}\n          //           {result.climate}\n          //         </Typography>\n          //       </Box>\n          //     </Stack>\n          //   </Box>\n\n          //   {/* CSS Animations */}\n          //   <style jsx>{`\n          //     @keyframes twinkle {\n          //       0% { opacity: 0.1; }\n          //       100% { opacity: 0.25; }\n          //     }\n          //   `}</style>\n          // </Card>\n        );\n      })}\n    </Box>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AAiBA;AACA;AACA;;;;;;AAEO,MAAM,WAAW,CAAC,EAAE,OAAO,EAAiB;IACjD,qBACE,qKAAC,iLAAA,CAAA,MAAG;QACF,OAAO;YACL,OAAO;YACP,SAAS;YACT,qBAAqB;YAErB,KAAK;YACL,mBAAmB;YACnB,wBAAwB;YACxB,QAAQ,CAAC,UAAU,EAAE,yGAAA,CAAA,UAAO,CAAC,OAAO,CAAC,IAAI,EAAE;QAG7C;kBAEC,SAAS,IAAI,CAAC;YACb,MAAM,iBAAiB,OAAO,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI;YACxD,MAAM,eAAe,CAAA,GAAA,gHAAA,CAAA,kBAAe,AAAD,EAAE;YAErC,0DAA0D;YAC1D,MAAM,uBAAuB,CAAC,SAAiB;gBAC7C,OAAO,CAAC;+CAC6B,EAAE,MAAM;+CACR,EAAE,MAAM;;UAE7C,CAAC;YACH;YAEA,qBACE,qKAAC,kIAAA,CAAA,aAAU;gBAAmB,QAAQ;eAArB,OAAO,IAAI;;;;;QA4QhC;;;;;;AAGN","debugId":null}},
    {"offset": {"line": 738, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/src/components/home/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport MainContainer from \"../Container/MainContainer\";\nimport usePlanets from \"../../../query/planets/usePlanets\";\nimport { Button } from \"@mui/material\";\nimport { useDebounce } from \"../../../hooks/useDebounce\";\nimport SearchInput from \"../searchInput\";\nimport { DataGrid } from \"../dataGrid\";\n\nconst Home = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const debouncedSearchTerm = useDebounce(searchTerm, 1000);\n\n  const { planetsResponse, isLoading, fetchPage, currentPage } = usePlanets({\n    search: debouncedSearchTerm,\n  });\n\n  console.log(planetsResponse);\n  // console.log(isLoading, isFetching, isPending);\n  return (\n    <MainContainer>\n      <SearchInput\n        placeholder=\"Search planets...\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e)}\n        isLoading={isLoading}\n      />\n      <DataGrid results={planetsResponse?.results} />\n\n      <Button onClick={() => fetchPage(currentPage + 1)}>Next</Button>\n      <Button onClick={() => fetchPage(currentPage - 1)}>Previous</Button>\n    </MainContainer>\n  );\n};\n\nexport default Home;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAEA,MAAM,OAAO;IACX,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,sBAAsB,CAAA,GAAA,6GAAA,CAAA,cAAW,AAAD,EAAE,YAAY;IAEpD,MAAM,EAAE,eAAe,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,UAAU,AAAD,EAAE;QACxE,QAAQ;IACV;IAEA,QAAQ,GAAG,CAAC;IACZ,iDAAiD;IACjD,qBACE,qKAAC,yIAAA,CAAA,UAAa;;0BACZ,qKAAC,mIAAA,CAAA,UAAW;gBACV,aAAY;gBACZ,OAAO;gBACP,UAAU,CAAC,IAAM,cAAc;gBAC/B,WAAW;;;;;;0BAEb,qKAAC,gIAAA,CAAA,WAAQ;gBAAC,SAAS,iBAAiB;;;;;;0BAEpC,qKAAC,0LAAA,CAAA,SAAM;gBAAC,SAAS,IAAM,UAAU,cAAc;0BAAI;;;;;;0BACnD,qKAAC,0LAAA,CAAA,SAAM;gBAAC,SAAS,IAAM,UAAU,cAAc;0BAAI;;;;;;;;;;;;AAGzD;uCAEe","debugId":null}},
    {"offset": {"line": 819, "column": 0}, "map": {"version":3,"sources":["file:///home/soutto/Soutto/Development/ilia/src/pages/index.tsx"],"sourcesContent":["import React from \"react\";\nimport Home from \"../components/home\";\n\nconst HomePage = () => {\n  return <Home />;\n};\n\nexport default HomePage;\n"],"names":[],"mappings":";;;;AACA;;;;;;;AAEA,MAAM,WAAW;IACf,qBAAO,qKAAC,4HAAA,CAAA,UAAI;;;;;AACd;uCAEe","debugId":null}}]
}